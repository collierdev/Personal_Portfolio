{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personal_Portfolio\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Hero from './components/Hero/Hero';\nimport About from './components/About/About';\nimport Work from './components/Work/Work';\nimport Contact from './components/Contact/Contact';\nimport Navbar from './components/Navbar/Navbar';\nimport './App.css';\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport gsap from 'gsap';\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { ScrollToPlugin } from \"gsap/dist/ScrollToPlugin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(ScrollToPlugin);\n\nfunction App() {\n  _s();\n\n  gsap.registerPlugin(ScrollTrigger);\n  const navRef = useRef();\n  const tweenRef = useRef();\n  let [menuState, setMenuState] = useState(false);\n  useEffect(() => {\n    tweenRef.current = gsap.to(navRef, {\n      y: 20,\n      paused: true,\n      scrollTrigger: {\n        trigger: \"#thirdCircle\",\n        markers: true\n      }\n    });\n\n    const updateScrollDirection = progress => {\n      progress === 1 ? setScrollDirection(true) : setScrollDirection(false);\n    };\n  }, []);\n  useEffect(() => {\n    // toggle animation when someFlag changes\n    if (someFlag) {\n      anim.current.reverse();\n    } else {\n      anim.current.play();\n    }\n  }, [someFlag]);\n\n  const onScrollDown = () => {\n    tweenRef.current.play();\n  };\n\n  const onScrolUp = () => {\n    tweenRef.current.reverse();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      ref: navRef,\n      menuState: menuState,\n      setMenuState: setMenuState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      id: \"section-0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Work, {\n      id: \"section-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {\n      id: \"section-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contact, {\n      id: \"section-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3ojopp+Ouy+coZqOiq0i9/ssPtw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Personal_Portfolio/my-app/src/App.js"],"names":["Hero","About","Work","Contact","Navbar","React","useState","useCallback","useRef","useEffect","gsap","ScrollTrigger","ScrollToPlugin","registerPlugin","App","navRef","tweenRef","menuState","setMenuState","current","to","y","paused","scrollTrigger","trigger","markers","updateScrollDirection","progress","setScrollDirection","someFlag","anim","reverse","play","onScrollDown","onScrolUp"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,MAAtC,EAA6CC,SAA7C,QAA6D,OAA7D;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,SAASC,cAAT,QAA+B,0BAA/B;;AACAF,IAAI,CAACG,cAAL,CAAoBD,cAApB;;AAEA,SAASE,GAAT,GAAe;AAAA;;AACbJ,EAAAA,IAAI,CAACG,cAAL,CAAoBF,aAApB;AACA,QAAMI,MAAM,GAAGP,MAAM,EAArB;AACA,QAAMQ,QAAQ,GAAGR,MAAM,EAAvB;AACA,MAAI,CAACS,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAAxC;AACAG,EAAAA,SAAS,CAAC,MAAM;AACVO,IAAAA,QAAQ,CAACG,OAAT,GAAmBT,IAAI,CAACU,EAAL,CAAQL,MAAR,EAAgB;AAC/BM,MAAAA,CAAC,EAAE,EAD4B;AAE/BC,MAAAA,MAAM,EAAE,IAFuB;AAG/BC,MAAAA,aAAa,EAAE;AACbC,QAAAA,OAAO,EAAE,cADI;AAEbC,QAAAA,OAAO,EAAE;AAFI;AAHgB,KAAhB,CAAnB;;AAQA,UAAMC,qBAAqB,GAAGC,QAAQ,IAAI;AACxCA,MAAAA,QAAQ,KAAK,CAAb,GAAiBC,kBAAkB,CAAC,IAAD,CAAnC,GAA4CA,kBAAkB,CAAC,KAAD,CAA9D;AACD,KAFD;AAGL,GAZQ,EAYN,EAZM,CAAT;AAcAnB,EAAAA,SAAS,CAAC,MAAM;AAEd;AACA,QAAIoB,QAAJ,EAAc;AACZC,MAAAA,IAAI,CAACX,OAAL,CAAaY,OAAb;AACD,KAFD,MAEO;AACLD,MAAAA,IAAI,CAACX,OAAL,CAAaa,IAAb;AACD;AAEF,GATQ,EASN,CAACH,QAAD,CATM,CAAT;;AAUF,QAAMI,YAAY,GAAG,MAAK;AACxBjB,IAAAA,QAAQ,CAACG,OAAT,CAAiBa,IAAjB;AACD,GAFD;;AAGA,QAAME,SAAS,GAAG,MAAK;AACrBlB,IAAAA,QAAQ,CAACG,OAAT,CAAiBY,OAAjB;AACD,GAFD;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAEhB,MAAb;AAAqB,MAAA,SAAS,EAAEE,SAAhC;AAA2C,MAAA,YAAY,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA9CQJ,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import Hero from './components/Hero/Hero'\nimport About from './components/About/About'\nimport Work from './components/Work/Work'\nimport Contact from './components/Contact/Contact'\nimport Navbar from './components/Navbar/Navbar';\n\nimport './App.css';\nimport React, {useState, useCallback, useRef,useEffect} from 'react'\nimport gsap from 'gsap'\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\nimport { ScrollToPlugin } from \"gsap/dist/ScrollToPlugin\";\ngsap.registerPlugin(ScrollToPlugin);\n\nfunction App() {\n  gsap.registerPlugin(ScrollTrigger); \n  const navRef = useRef();\n  const tweenRef = useRef();\n  let [menuState, setMenuState] = useState(false);\n  useEffect(() => {\n        tweenRef.current = gsap.to(navRef, {\n            y: 20,\n            paused: true,\n            scrollTrigger: {\n              trigger: \"#thirdCircle\",\n              markers: true\n            }\n        });\n        const updateScrollDirection = progress => {\n          progress === 1 ? setScrollDirection(true) : setScrollDirection(false)\n        }\n  }, []); \n\n  useEffect(() => {\n  \n    // toggle animation when someFlag changes\n    if (someFlag) {\n      anim.current.reverse();\n    } else {\n      anim.current.play();\n    }\n  \n  }, [someFlag]);\nconst onScrollDown = () =>{\n  tweenRef.current.play();\n} \nconst onScrolUp = () =>{\n  tweenRef.current.reverse();\n} \n\n  return (\n    <div className=\"App\">\n      <Navbar ref={navRef} menuState={menuState} setMenuState={setMenuState} />\n\n      <Hero id=\"section-0\"></Hero>\n      <Work id=\"section-1\"></Work>\n      <About id=\"section-2\"></About>\n      <Contact id=\"section-3\"></Contact>\n    </div>\n  );\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}