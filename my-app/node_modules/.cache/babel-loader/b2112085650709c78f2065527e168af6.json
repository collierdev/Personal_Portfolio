{"ast":null,"code":"import * as React from 'react';\nimport useEvent from '@react-hook/event';\nimport { useThrottleCallback } from '@react-hook/throttle';\n\nfunction _ref(state, action) {\n  const {\n    event: e,\n    element\n  } = action;\n  let event;\n\n  if ('touches' in e) {\n    event = e.touches[0];\n  } else {\n    event = e;\n  }\n\n  const {\n    clientX,\n    clientY,\n    screenX,\n    screenY,\n    pageX = 0,\n    pageY = 0\n  } = event;\n  const rect = element.getBoundingClientRect();\n  const x = pageX - rect.left - (window.pageXOffset || window.scrollX);\n  const y = pageY - rect.top - (window.pageYOffset || window.scrollY); // shims a mouseleave event for touch devices\n\n  if ('touches' in e && (x < 0 || y < 0 || x > rect.width || y > rect.height)) {\n    return { ...state,\n      context: { ...state.context,\n        hoverStatus: 'leave',\n        touchStatus: 'end'\n      }\n    };\n  }\n\n  return {\n    context: { ...state.context,\n      hoverStatus: 'enter'\n    },\n    mouse: { ...state.mouse,\n      x,\n      y,\n      pageX,\n      pageY,\n      clientX,\n      clientY,\n      screenX,\n      screenY,\n      elementWidth: rect.width,\n      elementHeight: rect.height,\n      isOver: true,\n      isTouch: 'touches' in e\n    }\n  };\n}\n\nfunction _ref2(state, action) {\n  const {\n    mouse,\n    context\n  } = state;\n  const handleDown = _ref;\n\n  if (action.type === 'mousemove') {\n    // Bails out if touch has ended\n    if (context.touchStatus === 'end') return state;\n    return handleDown(state, action);\n  } else if (action.type === 'touchmove') {\n    const nextState = {\n      context: { ...context,\n        touchStatus: 'start'\n      },\n      mouse\n    };\n    return handleDown(nextState, action);\n  } else if (action.type === 'touchdown') {\n    const nextState = {\n      context: { ...context,\n        touchStatus: 'start'\n      },\n      mouse: { ...mouse,\n        isDown: true\n      }\n    };\n    return handleDown(nextState, action);\n  } else if (action.type === 'mousedown') {\n    return {\n      context,\n      mouse: { ...mouse,\n        isDown: true\n      }\n    };\n  } else if (action.type === 'mouseup') {\n    return {\n      context,\n      mouse: { ...mouse,\n        isDown: false\n      }\n    };\n  } else if (action.type === 'mouseleave') {\n    return {\n      context: { ...context,\n        hoverStatus: 'leave'\n      },\n      mouse: { ...mouse,\n        isOver: false\n      }\n    };\n  } else if (action.type === 'touchleave') {\n    return {\n      context: { ...context,\n        hoverStatus: 'leave',\n        touchStatus: 'end'\n      },\n      mouse: { ...mouse,\n        isOver: false,\n        isDown: false\n      }\n    };\n  } else if (action.type === 'activeStatus') {\n    return {\n      context: { ...context,\n        activeStatus: action.value\n      },\n      mouse\n    };\n  }\n\n  return state;\n}\n\nfunction useMouse(target, options = {}) {\n  const {\n    fps = 30,\n    enterDelay = 0,\n    leaveDelay = 0\n  } = options;\n  const [state, dispatch] = React.useReducer(_ref2, {\n    mouse: initialState,\n    context: initialContext\n  });\n  const onMove = useThrottleCallback(event => {\n    const element = target && 'current' in target ? target.current : target;\n    if (!element) return;\n    dispatch({\n      type: 'mousemove',\n      event,\n      element\n    });\n  }, fps, true);\n  const onTouchMove = useThrottleCallback(event => {\n    const element = target && 'current' in target ? target.current : target;\n    if (!element) return;\n    dispatch({\n      type: 'touchmove',\n      event,\n      element\n    });\n  }, fps, true);\n  const onLeave = useThrottleCallback(() => dispatch({\n    type: 'mouseleave'\n  }), fps, // This has to be false because we always want this callback to fire after any\n  // move events.\n  false);\n  const onDown = useThrottleCallback(event => {\n    const element = target && 'current' in target ? target.current : target;\n    if (!element) return;\n    dispatch('touches' in event ? {\n      type: 'touchdown',\n      element,\n      event: event\n    } : {\n      type: 'mousedown',\n      element,\n      event: event\n    });\n  }, fps, true);\n  const onUp = useThrottleCallback(() => dispatch({\n    type: 'mouseup'\n  }), fps, // This has to be false because we always want this callback to fire after any\n  // down events.\n  false);\n  const onTouchEnd = useThrottleCallback(() => dispatch({\n    type: 'touchleave'\n  }), fps, // This has to be false because we always want this callback to fire after any\n  // move events.\n  false);\n  useEvent(target, 'mouseenter', onMove);\n  useEvent(target, 'mousemove', onMove);\n  useEvent(target, 'mouseleave', onLeave);\n  useEvent(target, 'mousedown', onDown);\n  useEvent(window, 'mousedown', onDown);\n  useEvent(window, 'mouseup', onUp);\n  useEvent(target, 'touchstart', onDown);\n  useEvent(target, 'touchmove', onTouchMove);\n  useEvent(target, 'touchend', onTouchEnd);\n  useEvent(target, 'touchcancel', onTouchEnd);\n\n  function _ref3() {\n    return dispatch({\n      type: 'activeStatus',\n      value: 'active'\n    });\n  }\n\n  function _ref4() {\n    return dispatch({\n      type: 'activeStatus',\n      value: 'inactive'\n    });\n  }\n\n  React.useEffect(() => {\n    if (state.context.hoverStatus === 'enter') {\n      if (enterDelay) {\n        const timeout = setTimeout(_ref3, enterDelay);\n        return () => clearTimeout(timeout);\n      }\n\n      dispatch({\n        type: 'activeStatus',\n        value: 'active'\n      });\n    } else {\n      if (leaveDelay) {\n        const timeout = setTimeout(_ref4, leaveDelay);\n        return () => clearTimeout(timeout);\n      }\n\n      dispatch({\n        type: 'activeStatus',\n        value: 'inactive'\n      });\n    }\n  }, [state.context.hoverStatus, enterDelay, leaveDelay]);\n  return state.context.activeStatus === 'active' ? state.mouse : initialState;\n}\n\nconst initialState = {\n  x: null,\n  y: null,\n  pageX: null,\n  pageY: null,\n  clientX: null,\n  clientY: null,\n  screenX: null,\n  screenY: null,\n  elementWidth: null,\n  elementHeight: null,\n  isOver: false,\n  isDown: false,\n  isTouch: false\n};\nconst initialContext = {\n  hoverStatus: 'idle',\n  touchStatus: 'idle',\n  activeStatus: 'inactive'\n};\nexport default useMouse;","map":{"version":3,"sources":["E:/Personal_Portfolio/node_modules/@react-hook/mouse-position/dist/module/index.js"],"names":["React","useEvent","useThrottleCallback","_ref","state","action","event","e","element","touches","clientX","clientY","screenX","screenY","pageX","pageY","rect","getBoundingClientRect","x","left","window","pageXOffset","scrollX","y","top","pageYOffset","scrollY","width","height","context","hoverStatus","touchStatus","mouse","elementWidth","elementHeight","isOver","isTouch","_ref2","handleDown","type","nextState","isDown","activeStatus","value","useMouse","target","options","fps","enterDelay","leaveDelay","dispatch","useReducer","initialState","initialContext","onMove","current","onTouchMove","onLeave","onDown","onUp","onTouchEnd","_ref3","_ref4","useEffect","timeout","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport useEvent from '@react-hook/event';\nimport { useThrottleCallback } from '@react-hook/throttle';\n\nfunction _ref(state, action) {\n  const {\n    event: e,\n    element\n  } = action;\n  let event;\n\n  if ('touches' in e) {\n    event = e.touches[0];\n  } else {\n    event = e;\n  }\n\n  const {\n    clientX,\n    clientY,\n    screenX,\n    screenY,\n    pageX = 0,\n    pageY = 0\n  } = event;\n  const rect = element.getBoundingClientRect();\n  const x = pageX - rect.left - (window.pageXOffset || window.scrollX);\n  const y = pageY - rect.top - (window.pageYOffset || window.scrollY); // shims a mouseleave event for touch devices\n\n  if ('touches' in e && (x < 0 || y < 0 || x > rect.width || y > rect.height)) {\n    return { ...state,\n      context: { ...state.context,\n        hoverStatus: 'leave',\n        touchStatus: 'end'\n      }\n    };\n  }\n\n  return {\n    context: { ...state.context,\n      hoverStatus: 'enter'\n    },\n    mouse: { ...state.mouse,\n      x,\n      y,\n      pageX,\n      pageY,\n      clientX,\n      clientY,\n      screenX,\n      screenY,\n      elementWidth: rect.width,\n      elementHeight: rect.height,\n      isOver: true,\n      isTouch: 'touches' in e\n    }\n  };\n}\n\nfunction _ref2(state, action) {\n  const {\n    mouse,\n    context\n  } = state;\n  const handleDown = _ref;\n\n  if (action.type === 'mousemove') {\n    // Bails out if touch has ended\n    if (context.touchStatus === 'end') return state;\n    return handleDown(state, action);\n  } else if (action.type === 'touchmove') {\n    const nextState = {\n      context: { ...context,\n        touchStatus: 'start'\n      },\n      mouse\n    };\n    return handleDown(nextState, action);\n  } else if (action.type === 'touchdown') {\n    const nextState = {\n      context: { ...context,\n        touchStatus: 'start'\n      },\n      mouse: { ...mouse,\n        isDown: true\n      }\n    };\n    return handleDown(nextState, action);\n  } else if (action.type === 'mousedown') {\n    return {\n      context,\n      mouse: { ...mouse,\n        isDown: true\n      }\n    };\n  } else if (action.type === 'mouseup') {\n    return {\n      context,\n      mouse: { ...mouse,\n        isDown: false\n      }\n    };\n  } else if (action.type === 'mouseleave') {\n    return {\n      context: { ...context,\n        hoverStatus: 'leave'\n      },\n      mouse: { ...mouse,\n        isOver: false\n      }\n    };\n  } else if (action.type === 'touchleave') {\n    return {\n      context: { ...context,\n        hoverStatus: 'leave',\n        touchStatus: 'end'\n      },\n      mouse: { ...mouse,\n        isOver: false,\n        isDown: false\n      }\n    };\n  } else if (action.type === 'activeStatus') {\n    return {\n      context: { ...context,\n        activeStatus: action.value\n      },\n      mouse\n    };\n  }\n\n  return state;\n}\n\nfunction useMouse(target, options = {}) {\n  const {\n    fps = 30,\n    enterDelay = 0,\n    leaveDelay = 0\n  } = options;\n  const [state, dispatch] = React.useReducer(_ref2, {\n    mouse: initialState,\n    context: initialContext\n  });\n  const onMove = useThrottleCallback(event => {\n    const element = target && 'current' in target ? target.current : target;\n    if (!element) return;\n    dispatch({\n      type: 'mousemove',\n      event,\n      element\n    });\n  }, fps, true);\n  const onTouchMove = useThrottleCallback(event => {\n    const element = target && 'current' in target ? target.current : target;\n    if (!element) return;\n    dispatch({\n      type: 'touchmove',\n      event,\n      element\n    });\n  }, fps, true);\n  const onLeave = useThrottleCallback(() => dispatch({\n    type: 'mouseleave'\n  }), fps, // This has to be false because we always want this callback to fire after any\n  // move events.\n  false);\n  const onDown = useThrottleCallback(event => {\n    const element = target && 'current' in target ? target.current : target;\n    if (!element) return;\n    dispatch('touches' in event ? {\n      type: 'touchdown',\n      element,\n      event: event\n    } : {\n      type: 'mousedown',\n      element,\n      event: event\n    });\n  }, fps, true);\n  const onUp = useThrottleCallback(() => dispatch({\n    type: 'mouseup'\n  }), fps, // This has to be false because we always want this callback to fire after any\n  // down events.\n  false);\n  const onTouchEnd = useThrottleCallback(() => dispatch({\n    type: 'touchleave'\n  }), fps, // This has to be false because we always want this callback to fire after any\n  // move events.\n  false);\n  useEvent(target, 'mouseenter', onMove);\n  useEvent(target, 'mousemove', onMove);\n  useEvent(target, 'mouseleave', onLeave);\n  useEvent(target, 'mousedown', onDown);\n  useEvent(window, 'mousedown', onDown);\n  useEvent(window, 'mouseup', onUp);\n  useEvent(target, 'touchstart', onDown);\n  useEvent(target, 'touchmove', onTouchMove);\n  useEvent(target, 'touchend', onTouchEnd);\n  useEvent(target, 'touchcancel', onTouchEnd);\n\n  function _ref3() {\n    return dispatch({\n      type: 'activeStatus',\n      value: 'active'\n    });\n  }\n\n  function _ref4() {\n    return dispatch({\n      type: 'activeStatus',\n      value: 'inactive'\n    });\n  }\n\n  React.useEffect(() => {\n    if (state.context.hoverStatus === 'enter') {\n      if (enterDelay) {\n        const timeout = setTimeout(_ref3, enterDelay);\n        return () => clearTimeout(timeout);\n      }\n\n      dispatch({\n        type: 'activeStatus',\n        value: 'active'\n      });\n    } else {\n      if (leaveDelay) {\n        const timeout = setTimeout(_ref4, leaveDelay);\n        return () => clearTimeout(timeout);\n      }\n\n      dispatch({\n        type: 'activeStatus',\n        value: 'inactive'\n      });\n    }\n  }, [state.context.hoverStatus, enterDelay, leaveDelay]);\n  return state.context.activeStatus === 'active' ? state.mouse : initialState;\n}\n\nconst initialState = {\n  x: null,\n  y: null,\n  pageX: null,\n  pageY: null,\n  clientX: null,\n  clientY: null,\n  screenX: null,\n  screenY: null,\n  elementWidth: null,\n  elementHeight: null,\n  isOver: false,\n  isDown: false,\n  isTouch: false\n};\nconst initialContext = {\n  hoverStatus: 'idle',\n  touchStatus: 'idle',\n  activeStatus: 'inactive'\n};\nexport default useMouse;"]},"metadata":{},"sourceType":"module"}