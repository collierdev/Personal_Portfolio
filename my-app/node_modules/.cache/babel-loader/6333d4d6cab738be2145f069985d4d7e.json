{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personal_Portfolio\\\\my-app\\\\src\\\\components\\\\About\\\\DNA.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DNA() {\n  _s();\n\n  const mountRef = useRef(null);\n  useEffect(() => {\n    var width = document.getElementById('container').offsetWidth;\n    var height = document.getElementById('container').offsetHeight;\n    console.log(width + 'x' + height);\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    var renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(width, height);\n    mountRef.current.appendChild(renderer.domElement);\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 3;\n\n    var animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n    return () => mountRef.current.removeChild(renderer.domElement);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    id: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DNA, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n\n_c = DNA;\nexport default DNA;\n\nvar _c;\n\n$RefreshReg$(_c, \"DNA\");","map":{"version":3,"sources":["E:/Personal_Portfolio/my-app/src/components/About/DNA.js"],"names":["useEffect","useRef","THREE","DNA","mountRef","width","document","getElementById","offsetWidth","height","offsetHeight","console","log","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","alpha","setSize","current","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","removeChild"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAMC,QAAQ,GAAGH,MAAM,CAAC,IAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,WAAjD;AACA,QAAIC,MAAM,GAAGH,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCG,YAAlD;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,GAAC,GAAN,GAAUI,MAAtB;AACA,QAAII,KAAK,GAAG,IAAIX,KAAK,CAACY,KAAV,EAAZ;AACA,QAAIC,MAAM,GAAG,IAAIb,KAAK,CAACc,iBAAV,CAA6B,EAA7B,EAAiCX,KAAK,GAACI,MAAvC,EAA+C,GAA/C,EAAoD,IAApD,CAAb;AACA,QAAIQ,QAAQ,GAAG,IAAIf,KAAK,CAACgB,aAAV,CAAyB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAzB,CAAf;AAEAF,IAAAA,QAAQ,CAACG,OAAT,CAAiBf,KAAjB,EAAwBI,MAAxB;AAEAL,IAAAA,QAAQ,CAACiB,OAAT,CAAiBC,WAAjB,CAA8BL,QAAQ,CAACM,UAAvC;AAEA,QAAIC,QAAQ,GAAG,IAAItB,KAAK,CAACuB,WAAV,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAf;AACA,QAAIC,QAAQ,GAAG,IAAIxB,KAAK,CAACyB,iBAAV,CAA6B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA7B,CAAf;AACA,QAAIC,IAAI,GAAG,IAAI3B,KAAK,CAAC4B,IAAV,CAAgBN,QAAhB,EAA0BE,QAA1B,CAAX;AAEAb,IAAAA,KAAK,CAACkB,GAAN,CAAWF,IAAX;AACAd,IAAAA,MAAM,CAACiB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AAEA,QAAIC,OAAO,GAAG,YAAY;AACxBC,MAAAA,qBAAqB,CAAED,OAAF,CAArB;AACAL,MAAAA,IAAI,CAACO,QAAL,CAAcC,CAAd,IAAmB,IAAnB;AACAR,MAAAA,IAAI,CAACO,QAAL,CAAcE,CAAd,IAAmB,IAAnB;AACArB,MAAAA,QAAQ,CAACsB,MAAT,CAAiB1B,KAAjB,EAAwBE,MAAxB;AACD,KALD;;AAOAmB,IAAAA,OAAO;AAEP,WAAO,MAAM9B,QAAQ,CAACiB,OAAT,CAAiBmB,WAAjB,CAA8BvB,QAAQ,CAACM,UAAvC,CAAb;AACD,GA7BM,EA6BJ,EA7BI,CAAT;AA+BA,sBACI;AAAK,IAAA,GAAG,EAAEnB,QAAV;AAAoB,IAAA,EAAE,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;;GAtCQD,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport * as THREE from \"three\";\r\n\r\nfunction DNA() {\r\n\r\n    const mountRef = useRef(null);\r\n    useEffect(() => {\r\n        var width = document.getElementById('container').offsetWidth;\r\n        var height = document.getElementById('container').offsetHeight;\r\n        console.log(width+'x'+height);\r\n        var scene = new THREE.Scene();\r\n        var camera = new THREE.PerspectiveCamera( 75, width/height, 0.1, 1000 );\r\n        var renderer = new THREE.WebGLRenderer( { alpha: true } );\r\n        \r\n        renderer.setSize(width, height);\r\n        \r\n        mountRef.current.appendChild( renderer.domElement );\r\n        \r\n        var geometry = new THREE.BoxGeometry( 1, 1, 1 );\r\n        var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\r\n        var cube = new THREE.Mesh( geometry, material );\r\n        \r\n        scene.add( cube );\r\n        camera.position.z = 3;\r\n        \r\n        var animate = function () {\r\n          requestAnimationFrame( animate );\r\n          cube.rotation.x += 0.01;\r\n          cube.rotation.y += 0.01;\r\n          renderer.render( scene, camera );\r\n        };\r\n        \r\n        animate();\r\n    \r\n        return () => mountRef.current.removeChild( renderer.domElement);\r\n      }, []);\r\n\r\n    return (\r\n        <div ref={mountRef} id=\"container\">\r\n        </div>\r\n    )\r\n}\r\nexport default DNA\r\n"]},"metadata":{},"sourceType":"module"}