{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personal_Portfolio\\\\server\\\\client\\\\src\\\\components\\\\Contact\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport './Contact.css';\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useForm } from 'react-hook-form';\nimport Socials from \"../Socials/Socials\";\nimport axios from 'axios';\nimport FileSaver from 'file-saver';\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport gsap from 'gsap';\nimport { contactCardReveal, contactTitle, resumeReveal, contactSocials, contactForm } from '../Animantion/Animation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  name: yup.string().matches(/^[A-Za-z ]*$/, 'Please enter valid name').max(40).required('Required'),\n  email: yup.string().email('Invalid Email Format').required('Required'),\n  message: yup.string().matches(/^[a-zA-Z0-9?$@#()'!,+\\-=_:.&€£*%\\s]+$/, 'Invalid entry').min(10).max(250).required()\n});\n\nconst Contact = props => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [result, setResult] = useState();\n\n  async function postForm(data) {\n    const response = await axios.post('/contactme', data);\n    setResult(response.data.formEntry);\n  }\n\n  async function getResume() {\n    const response = await axios.get('/resume', {\n      responseType: `blob`\n    });\n    const blob = new Blob([response.data], {\n      type: \"application/pdf\"\n    });\n    console.log(response);\n    FileSaver.saveAs(blob, \"Resume.pdf\");\n  }\n\n  const onSubmit = data => {\n    console.log(data);\n    postForm(data);\n    reset();\n  };\n\n  const b1 = \"linear-gradient(180deg, rgba(254,176,42,1) 0%, rgba(253,150,34,1) 100%)\";\n  const b2 = \"linear-gradient(180deg, rgba(254,210,51,1) 0%, rgba(253,155,36,1) 100%)\";\n  const gradientRef = useRef();\n  let contactCardRef = useRef();\n  let contactTitleRef = useRef();\n  let contactTextRef = useRef();\n  let resumeTextRef = useRef();\n  let resumeButtonRef = useRef();\n  let contactSocialTextRef = useRef();\n  let contactSocialsRef = useRef();\n  let labelRef1 = useRef();\n  let inputRef1 = useRef();\n  let labelRef2 = useRef();\n  let inputRef2 = useRef();\n  let labelRef3 = useRef();\n  let inputRef3 = useRef();\n  useEffect(() => {\n    contactCardReveal(contactCardRef);\n  }, []);\n  useEffect(() => {\n    contactTitle(contactTitleRef, contactTextRef);\n  }, []);\n  useEffect(() => {\n    resumeReveal(resumeTextRef, resumeButtonRef);\n  }, []);\n  useEffect(() => {\n    contactSocials(contactSocialTextRef, contactSocialsRef);\n  }, []);\n  useEffect(() => {\n    contactForm(labelRef1, inputRef1, labelRef2, inputRef2, labelRef3, inputRef3);\n  }, []);\n  useEffect(() => {\n    const animation = gsap.fromTo(gradientRef.current, {\n      background: b1\n    }, {\n      ease: \"none\",\n      duration: 2,\n      background: b2,\n      repeat: -1,\n      yoyo: true\n    });\n    return () => {\n      animation.kill();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-page\",\n    ref: gradientRef,\n    id: props.id,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-container\",\n      ref: elem => {\n        contactCardRef = elem;\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"contact-title\",\n          ref: elem => {\n            contactTitleRef = elem;\n          },\n          children: \"Contact Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: elem => {\n            contactTextRef = elem;\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"contact-content first\",\n            children: \"Looking to hire or work with me?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"contact-content second\",\n            children: \"Feel free to drop me a line.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"contact-content third\",\n          ref: elem => {\n            resumeTextRef = elem;\n          },\n          children: \"Want a look at my resume?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"resume-button\",\n          ref: elem => {\n            resumeButtonRef = elem;\n          },\n          onClick: getResume,\n          children: \"Download Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"contact-content fourth\",\n          ref: elem => {\n            contactSocialTextRef = elem;\n          },\n          children: \"Visit my socials to stay up to date on me and my coding experiments.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Socials, {\n          ref: elem => {\n            contactSocialsRef = elem;\n          },\n          color: \"#4A4A4A\",\n          container: \"contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-right\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              ref: elem => {\n                labelRef1 = elem;\n              },\n              children: \"Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"name\"),\n              placeholder: \"Name\",\n              type: \"text\",\n              id: \"name\",\n              required: true,\n              ref: elem => {\n                inputRef1 = elem;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              ref: elem => {\n                labelRef2 = elem;\n              },\n              children: \"Email *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\"),\n              placeholder: \"Email\",\n              type: \"email\",\n              id: \"email\",\n              required: true,\n              ref: elem => {\n                inputRef2 = elem;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"message\",\n              ref: elem => {\n                labelRef2 = elem;\n              },\n              children: \"Message *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", { ...register(\"message\"),\n              placeholder: \"Your message here\",\n              id: \"message\",\n              required: true,\n              ref: elem => {\n                inputRef3 = elem;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), result, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"form-button\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Contact, \"wyXcnf/8z/4Yw/1vMwyyH3MXI9o=\", false, function () {\n  return [useForm];\n});\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["E:/Personal_Portfolio/server/client/src/components/Contact/Contact.js"],"names":["React","useState","useEffect","useRef","useForm","Socials","axios","FileSaver","yupResolver","yup","gsap","contactCardReveal","contactTitle","resumeReveal","contactSocials","contactForm","schema","object","shape","name","string","matches","max","required","email","message","min","Contact","props","register","handleSubmit","watch","formState","errors","reset","resolver","result","setResult","postForm","data","response","post","formEntry","getResume","get","responseType","blob","Blob","type","console","log","saveAs","onSubmit","b1","b2","gradientRef","contactCardRef","contactTitleRef","contactTextRef","resumeTextRef","resumeButtonRef","contactSocialTextRef","contactSocialsRef","labelRef1","inputRef1","labelRef2","inputRef2","labelRef3","inputRef3","animation","fromTo","current","background","ease","duration","repeat","yoyo","kill","id","elem"],"mappings":"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","sourcesContent":["import './Contact.css';\r\nimport React, { useState,useEffect,useRef } from \"react\";\r\nimport {useForm} from 'react-hook-form'\r\nimport Socials from \"../Socials/Socials\"\r\nimport axios from 'axios'\r\nimport FileSaver from 'file-saver';\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport gsap from 'gsap';\r\nimport {contactCardReveal, contactTitle, resumeReveal, contactSocials,contactForm} from '../Animantion/Animation'\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().matches(/^[A-Za-z ]*$/, 'Please enter valid name').max(40).required('Required'),\r\n  email: yup.string().email('Invalid Email Format').required('Required'),\r\n  message: yup.string().matches(/^[a-zA-Z0-9?$@#()'!,+\\-=_:.&€£*%\\s]+$/, 'Invalid entry').min(10).max(250).required(),\r\n});\r\nconst Contact = (props) =>{\r\n    const { register, handleSubmit, watch, formState: { errors }, reset } = useForm({\r\n      resolver: yupResolver(schema),\r\n    });\r\n    const [result, setResult] = useState();\r\n    async function postForm(data) {\r\n      const response = await axios.post('/contactme',data);\r\n      setResult(response.data.formEntry);\r\n    }\r\n    async function getResume() {\r\n      const response = await axios.get('/resume',{responseType: `blob`});\r\n      const blob = new Blob([response.data], {type : \"application/pdf\"});\r\n  console.log(response);\r\n     FileSaver.saveAs(blob, \"Resume.pdf\");\r\n    }\r\n    const onSubmit = (data) => {\r\n      console.log(data);\r\n      postForm(data);\r\n      reset();\r\n  }\r\n\r\n\r\n\r\nconst b1 = \"linear-gradient(180deg, rgba(254,176,42,1) 0%, rgba(253,150,34,1) 100%)\";\r\nconst b2 = \"linear-gradient(180deg, rgba(254,210,51,1) 0%, rgba(253,155,36,1) 100%)\";\r\nconst gradientRef = useRef();\r\n\r\nlet contactCardRef = useRef();\r\nlet contactTitleRef = useRef();\r\nlet contactTextRef = useRef();\r\nlet resumeTextRef = useRef();\r\nlet resumeButtonRef = useRef();\r\nlet contactSocialTextRef = useRef();\r\nlet contactSocialsRef = useRef();\r\nlet labelRef1 = useRef();\r\nlet inputRef1 = useRef();\r\nlet labelRef2 = useRef();\r\nlet inputRef2 = useRef();\r\nlet labelRef3 = useRef();\r\nlet inputRef3 = useRef();\r\nuseEffect(() => {contactCardReveal(contactCardRef)}, [])\r\n\r\nuseEffect(() => {contactTitle(contactTitleRef, contactTextRef)}, [])\r\n\r\nuseEffect(() => {resumeReveal(resumeTextRef, resumeButtonRef)}, [])\r\n\r\nuseEffect(() => {contactSocials(contactSocialTextRef, contactSocialsRef)}, []);\r\n\r\nuseEffect(() => {contactForm(labelRef1, inputRef1, labelRef2, inputRef2, labelRef3, inputRef3)}, [])\r\nuseEffect(() => {\r\n  \r\n  const animation = gsap.fromTo(gradientRef.current, { background: b1}, {ease: \"none\", duration: 2, background: b2, repeat: -1, yoyo: true});\r\n\r\n  return () => {\r\n    animation.kill();\r\n  };\r\n},[]);\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"contact-page\" ref={gradientRef} id={props.id}>\r\n        <div className='contact-container'ref={elem => {contactCardRef = elem; }}>\r\n          <div className='contact-left' >\r\n            <h1 className=\"contact-title\" ref={elem => {contactTitleRef = elem; }}>Contact Me</h1>\r\n            <div ref={elem => {contactTextRef = elem; }}>\r\n              <p className=\"contact-content first\">Looking to hire or work with me?</p>\r\n              <p className=\"contact-content second\">Feel free to drop me a line.</p>\r\n            </div>\r\n            <p className=\"contact-content third\" ref={elem => {resumeTextRef = elem; }}>Want a look at my resume?</p>          \r\n            <button className=\"resume-button\" ref={elem => {resumeButtonRef = elem; }} onClick={getResume}>\r\n              Download Resume\r\n            </button>\r\n            <p className=\"contact-content fourth\" ref={elem => {contactSocialTextRef = elem; }} >Visit my socials to stay up to date on me and my coding experiments.</p>\r\n            <Socials ref={elem => {contactSocialsRef = elem; }} color=\"#4A4A4A\" container=\"contact\"></Socials>\r\n          </div>\r\n          <div className='contact-right'>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div>\r\n                <label htmlFor=\"name\" ref={elem => {labelRef1 = elem; }}>Name *</label>\r\n                <input {...register(\"name\")} placeholder=\"Name\" type=\"text\" id=\"name\" required   ref={elem => {inputRef1 = elem; }} />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"email\"  ref={elem => {labelRef2 = elem; }}>Email *</label>\r\n                <input {...register(\"email\")} placeholder=\"Email\" type=\"email\" id=\"email\" required ref={elem => {inputRef2 = elem; }}/>\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"message\" ref={elem => {labelRef2 = elem; }}>Message *</label>\r\n                <textarea {...register(\"message\") }placeholder=\"Your message here\" id=\"message\" required ref={elem => {inputRef3 = elem; }}/>\r\n              </div>\r\n              {result}\r\n              <button className=\"form-button\"type=\"submit\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        \r\n    );\r\n  }\r\n  export default Contact;\r\n\r\n  \r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}