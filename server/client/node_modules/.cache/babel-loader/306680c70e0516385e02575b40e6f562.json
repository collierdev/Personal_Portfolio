{"ast":null,"code":"import _slicedToArray from\"E:/Personal_Portfolio/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import Hero from'./components/Hero/Hero';import About from'./components/About/About';import Work from'./components/Work/Work';import Contact from'./components/Contact/Contact';import Navbar from'./components/Navbar/Navbar';import axios from'axios';import'./App.css';import React,{useState,useEffect}from'react';import gsap from'gsap';import{ScrollTrigger}from\"gsap/ScrollTrigger\";import{ScrollToPlugin}from\"gsap/dist/ScrollToPlugin\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";gsap.registerPlugin(ScrollTrigger,ScrollToPlugin);function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),menuState=_useState2[0],setMenuState=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),test=_useState4[0],setTest=_useState4[1];var size=useWindowSize();var getData=function getData(){axios.get('/testAPI').then(function(response){console.log(response);var newData=response.data;setTest(newData);});};useEffect(function(){return getData();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Navbar,{menuState:menuState,setMenuState:setMenuState}),/*#__PURE__*/_jsx(Hero,{size:size,id:\"section-0\",children:test}),/*#__PURE__*/_jsx(Work,{id:\"section-1\"}),/*#__PURE__*/_jsx(About,{id:\"section-2\"}),/*#__PURE__*/_jsx(Contact,{id:\"section-3\"})]});}function useWindowSize(){// Initialize state with undefined width/height so server and client renders match\n// Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\nvar _useState5=useState({width:undefined,height:undefined}),_useState6=_slicedToArray(_useState5,2),windowSize=_useState6[0],setWindowSize=_useState6[1];useEffect(function(){// Handler to call on window resize\nfunction handleResize(){// Set window width/height to state\nsetWindowSize({width:window.innerWidth,height:window.innerHeight});}// Add event listener\nwindow.addEventListener(\"resize\",handleResize);// Call handler right away so state gets updated with initial window size\nhandleResize();// Remove event listener on cleanup\nreturn function(){return window.removeEventListener(\"resize\",handleResize);};},[]);// Empty array ensures that effect is only run on mount\nreturn windowSize;}export default App;","map":{"version":3,"sources":["E:/Personal_Portfolio/server/client/src/App.js"],"names":["Hero","About","Work","Contact","Navbar","axios","React","useState","useEffect","gsap","ScrollTrigger","ScrollToPlugin","registerPlugin","App","menuState","setMenuState","test","setTest","size","useWindowSize","getData","get","then","response","console","log","newData","data","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":"0JAAA,MAAOA,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,0BAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,8BAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,CAAwBC,SAAxB,KAAwC,OAAxC,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,OAASC,aAAT,KAA8B,oBAA9B,CAEA,OAASC,cAAT,KAA+B,0BAA/B,C,wFACAF,IAAI,CAACG,cAAL,CAAoBF,aAApB,CAAmCC,cAAnC,EACA,QAASE,CAAAA,GAAT,EAAe,eAEmBN,QAAQ,CAAC,KAAD,CAF3B,wCAERO,SAFQ,eAEGC,YAFH,8BAGWR,QAAQ,CAAC,IAAD,CAHnB,yCAGNS,IAHM,eAGAC,OAHA,eAIb,GAAMC,CAAAA,IAAI,CAAGC,aAAa,EAA1B,CACA,GAAMC,CAAAA,OAAO,CAAE,QAATA,CAAAA,OAAS,EAAK,CAClBf,KAAK,CAACgB,GAAN,CAAU,UAAV,EACCC,IADD,CACM,SAACC,QAAD,CAAc,CAClBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EACA,GAAMG,CAAAA,OAAO,CAAGH,QAAQ,CAACI,IAAzB,CACAV,OAAO,CAACS,OAAD,CAAP,CACD,CALD,EAMD,CAPD,CASAlB,SAAS,CAAC,iBAAMY,CAAAA,OAAO,EAAb,EAAD,CAAkB,EAAlB,CAAT,CAGA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,MAAD,EAAS,SAAS,CAAEN,SAApB,CAA+B,YAAY,CAAEC,YAA7C,EADF,cAEE,KAAC,IAAD,EAAM,IAAI,CAAEG,IAAZ,CAAkB,EAAE,CAAC,WAArB,UAAkCF,IAAlC,EAFF,cAGE,KAAC,IAAD,EAAM,EAAE,CAAC,WAAT,EAHF,cAIE,KAAC,KAAD,EAAO,EAAE,CAAC,WAAV,EAJF,cAKE,KAAC,OAAD,EAAS,EAAE,CAAC,WAAZ,EALF,GADF,CASD,CACD,QAASG,CAAAA,aAAT,EAAyB,CACvB;AACA;AAFuB,eAGaZ,QAAQ,CAAC,CAC3CqB,KAAK,CAAEC,SADoC,CAE3CC,MAAM,CAAED,SAFmC,CAAD,CAHrB,yCAGhBE,UAHgB,eAGJC,aAHI,eAOvBxB,SAAS,CAAC,UAAM,CACd;AACA,QAASyB,CAAAA,YAAT,EAAwB,CACtB;AACAD,aAAa,CAAC,CACZJ,KAAK,CAAEM,MAAM,CAACC,UADF,CAEZL,MAAM,CAAEI,MAAM,CAACE,WAFH,CAAD,CAAb,CAID,CACD;AACAF,MAAM,CAACG,gBAAP,CAAwB,QAAxB,CAAkCJ,YAAlC,EACA;AACAA,YAAY,GACZ;AACA,MAAO,kBAAMC,CAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,CAAqCL,YAArC,CAAN,EAAP,CACD,CAfQ,CAeN,EAfM,CAAT,CAeQ;AACR,MAAOF,CAAAA,UAAP,CACD,CAGD,cAAelB,CAAAA,GAAf","sourcesContent":["import Hero from './components/Hero/Hero'\nimport About from './components/About/About'\nimport Work from './components/Work/Work'\nimport Contact from './components/Contact/Contact'\nimport Navbar from './components/Navbar/Navbar';\nimport axios from 'axios'\nimport './App.css';\nimport React, {useState,useEffect} from 'react'\nimport gsap from 'gsap'\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\nimport { ScrollToPlugin } from \"gsap/dist/ScrollToPlugin\";\ngsap.registerPlugin(ScrollTrigger, ScrollToPlugin);\nfunction App() {\n\n  let [menuState, setMenuState] = useState(false);\n  const [test, setTest] = useState(null)\n  const size = useWindowSize();\n  const getData =() =>{\n    axios.get('/testAPI')\n    .then((response) => {\n      console.log(response);\n      const newData = response.data;\n      setTest(newData);\n    })\n  }\n\n  useEffect(() => getData(), []);\n  \n  \n  return (\n    <div className=\"App\">\n      <Navbar  menuState={menuState} setMenuState={setMenuState} />\n      <Hero size={size} id=\"section-0\">{test}</Hero>\n      <Work id=\"section-1\"></Work>\n      <About id=\"section-2\"></About>\n      <Contact id=\"section-3\"></Contact>\n    </div>\n  );\n}\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}