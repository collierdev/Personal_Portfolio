{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personal_Portfolio\\\\server\\\\client\\\\src\\\\components\\\\Button\\\\Button.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport { gsap } from 'gsap';\nimport { buttonRevealRight, buttonRevealLeft, formButtonReveal } from '../Animantion/Animation';\nimport './Button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const Direction = props.direction;\n  let buttonRef = ref;\n  const tweenRef = useRef();\n  console.log(props.direction);\n  useEffect(() => {\n    if (Direction === \"right\") {\n      buttonRevealRight(buttonRef);\n    } else if (Direction === \"left\") {\n      buttonRevealLeft(buttonRef);\n    } else {\n      formButtonReveal(buttonRef);\n    }\n\n    ;\n  }, [Direction, buttonRef]);\n  useEffect(() => {\n    if (Direction === \"right\") {\n      tweenRef.current = gsap.to(buttonRef, {\n        x: 20,\n        paused: true\n      });\n    } else {\n      tweenRef.current = gsap.to(buttonRef, {\n        x: -20,\n        paused: true\n      });\n    }\n  });\n\n  const onHover = () => {\n    tweenRef.current.play();\n  };\n\n  const onLeave = () => {\n    tweenRef.current.reverse();\n  };\n\n  if (Direction === \"right\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      ref: element => {\n        buttonRef = element;\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseEnter: onHover,\n        onMouseLeave: onLeave,\n        className: \"button\",\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: `${Direction} arrow`,\n        width: \"100%\",\n        height: \"100%\",\n        viewBox: \"0 0 38 10\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M33.021 6L29.667 8.59L31.5 10L38 5L31.5 0L29.667 1.41L33.021 4H12V6H33.021Z M0 4H12V6H0V4Z\",\n          fill: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  } else if (Direction === \"left\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      ref: element => {\n        buttonRef = element;\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: `${Direction} arrow`,\n        width: \"100%\",\n        height: \"100%\",\n        viewBox: \"0 0 38 10\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M33.021 6L29.667 8.59L31.5 10L38 5L31.5 0L29.667 1.41L33.021 4H12V6H33.021Z M0 4H12V6H0V4Z\",\n          fill: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseEnter: onHover,\n        onMouseLeave: onLeave,\n        className: \"button\",\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      ref: element => {\n        buttonRef = element;\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: `${Direction} arrow`,\n        width: \"100%\",\n        height: \"100%\",\n        viewBox: \"0 0 38 10\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M33.021 6L29.667 8.59L31.5 10L38 5L31.5 0L29.667 1.41L33.021 4H12V6H33.021Z M0 4H12V6H0V4Z\",\n          fill: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseEnter: onHover,\n        onMouseLeave: onLeave,\n        className: \"button\",\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n}, \"9E02XsL7/GnkgdhpKQzESM8r/tw=\"));\n_c2 = Button;\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button$React.forwardRef\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["E:/Personal_Portfolio/server/client/src/components/Button/Button.js"],"names":["React","useRef","useEffect","gsap","buttonRevealRight","buttonRevealLeft","formButtonReveal","Button","forwardRef","props","ref","Direction","direction","buttonRef","tweenRef","console","log","current","to","x","paused","onHover","play","onLeave","reverse","element","children"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect} from \"react\";\r\nimport {gsap} from 'gsap';\r\nimport { buttonRevealRight, buttonRevealLeft, formButtonReveal } from '../Animantion/Animation'\r\nimport './Button.css'\r\n\r\nconst Button = React.forwardRef((props, ref) => {\r\n    const Direction = props.direction;\r\n    let buttonRef = ref;\r\n    const tweenRef = useRef();\r\n    console.log(props.direction);\r\n    useEffect(() =>{\r\n        \r\n        if(Direction === \"right\"){\r\n            buttonRevealRight(buttonRef);\r\n        }       \r\n        else if (Direction ===\"left\"){\r\n            buttonRevealLeft(buttonRef);\r\n        } else{\r\n            formButtonReveal(buttonRef);\r\n        };\r\n\r\n    },[Direction,buttonRef])\r\n    \r\n    useEffect(() => {\r\n        if(Direction === \"right\"){\r\n            tweenRef.current = gsap.to(buttonRef, {\r\n                x: 20,\r\n                paused: true\r\n            });\r\n        }\r\n        else{\r\n            tweenRef.current = gsap.to(buttonRef, {\r\n                x: -20,\r\n                paused: true\r\n            });\r\n        }\r\n      })\r\n    const onHover = () =>{\r\n        tweenRef.current.play();\r\n    } \r\n    const onLeave =() =>{\r\n        tweenRef.current.reverse();\r\n    }\r\n    \r\n    if(Direction ===\"right\"){\r\n    return (\r\n        <div className=\"button-container\"\r\n        ref={element => {\r\n            buttonRef = element;\r\n        }}>\r\n            <button onMouseEnter={onHover} onMouseLeave={onLeave} className=\"button\" \r\n            >\r\n                {props.children}\r\n            </button>   \r\n            <svg className={`${Direction} arrow`} width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M33.021 6L29.667 8.59L31.5 10L38 5L31.5 0L29.667 1.41L33.021 4H12V6H33.021Z M0 4H12V6H0V4Z\" fill=\"white\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n    } else if (Direction ===\"left\"){\r\n        return (\r\n            <div className=\"button-container\"\r\n            ref={element => {\r\n                buttonRef = element;\r\n            }}>\r\n                <svg className={`${Direction} arrow`} width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M33.021 6L29.667 8.59L31.5 10L38 5L31.5 0L29.667 1.41L33.021 4H12V6H33.021Z M0 4H12V6H0V4Z\" fill=\"white\"/>\r\n                </svg>\r\n                <button onMouseEnter={onHover} onMouseLeave={onLeave} className=\"button\" \r\n                >\r\n                    {props.children}\r\n                </button>  \r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"button-container\"\r\n            ref={element => {\r\n                buttonRef = element;\r\n            }}>\r\n                <svg className={`${Direction} arrow`} width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M33.021 6L29.667 8.59L31.5 10L38 5L31.5 0L29.667 1.41L33.021 4H12V6H33.021Z M0 4H12V6H0V4Z\" fill=\"white\"/>\r\n                </svg>\r\n                <button onMouseEnter={onHover} onMouseLeave={onLeave} className=\"button\"\r\n                >\r\n                    {props.children}\r\n                </button>   \r\n                \r\n            </div>\r\n        )\r\n    }\r\n})\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}