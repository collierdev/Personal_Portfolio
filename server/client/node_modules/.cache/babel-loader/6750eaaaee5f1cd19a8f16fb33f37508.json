{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personal_Portfolio\\\\server\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport Hero from './components/Hero/Hero';\nimport About from './components/About/About';\nimport Work from './components/Work/Work';\nimport Contact from './components/Contact/Contact';\nimport Navbar from './components/Navbar/Navbar';\nimport axios from 'axios';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport gsap from 'gsap';\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { ScrollToPlugin } from \"gsap/dist/ScrollToPlugin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(ScrollTrigger, ScrollToPlugin);\n\nfunction App() {\n  _s();\n\n  let [menuState, setMenuState] = useState(false);\n  const [test, setTest] = useState(null);\n  const size = useWindowSize();\n\n  const getData = () => {\n    axios.get('/testAPI').then(response => {\n      console.log(response);\n      const newData = response.data;\n      setTest(newData);\n    });\n  };\n\n  useEffect(() => getData(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      menuState: menuState,\n      setMenuState: setMenuState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      size: size,\n      id: \"section-0\",\n      children: test\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Work, {\n      id: \"section-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {\n      id: \"section-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contact, {\n      id: \"section-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9tUanGJO0/5mERn+mahUTA0ndOw=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = App;\n\nfunction useWindowSize() {\n  _s2();\n\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s2(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/Personal_Portfolio/server/client/src/App.js"],"names":["Hero","About","Work","Contact","Navbar","axios","React","useState","useEffect","gsap","ScrollTrigger","ScrollToPlugin","registerPlugin","App","menuState","setMenuState","test","setTest","size","useWindowSize","getData","get","then","response","console","log","newData","data","windowSize","setWindowSize","width","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,SAASC,cAAT,QAA+B,0BAA/B;;AACAF,IAAI,CAACG,cAAL,CAAoBF,aAApB,EAAmCC,cAAnC;;AACA,SAASE,GAAT,GAAe;AAAA;;AAEb,MAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMW,IAAI,GAAGC,aAAa,EAA1B;;AACA,QAAMC,OAAO,GAAE,MAAK;AAClBf,IAAAA,KAAK,CAACgB,GAAN,CAAU,UAAV,EACCC,IADD,CACOC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMG,OAAO,GAAGH,QAAQ,CAACI,IAAzB;AACAV,MAAAA,OAAO,CAACS,OAAD,CAAP;AACD,KALD;AAMD,GAPD;;AASAlB,EAAAA,SAAS,CAAC,MAAMY,OAAO,EAAd,EAAkB,EAAlB,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAS,MAAA,SAAS,EAAEN,SAApB;AAA+B,MAAA,YAAY,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEG,IAAZ;AAAkB,MAAA,EAAE,EAAC,WAArB;AAAA,gBAAkCF;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA1BQH,G;UAIMM,a;;;KAJNN,G;;AA2BT,SAASM,aAAT,GAAyB;AAAA;;AACvB;AACA;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC;AAC3CuB,IAAAA,KAAK,EAAEC,SADoC;AAE3CC,IAAAA,MAAM,EAAED;AAFmC,GAAD,CAA5C;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,aAASyB,YAAT,GAAwB;AACtB;AACAJ,MAAAA,aAAa,CAAC;AACZC,QAAAA,KAAK,EAAEI,MAAM,CAACC,UADF;AAEZH,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAFH,OAAD,CAAb;AAID,KARa,CASd;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAVc,CAWd;;AACAA,IAAAA,YAAY,GAZE,CAad;;AACA,WAAO,MAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAb;AACD,GAfQ,EAeN,EAfM,CAAT,CAPuB,CAsBf;;AACR,SAAOL,UAAP;AACD;;IAxBQT,a;;AA2BT,eAAeN,GAAf","sourcesContent":["import Hero from './components/Hero/Hero'\nimport About from './components/About/About'\nimport Work from './components/Work/Work'\nimport Contact from './components/Contact/Contact'\nimport Navbar from './components/Navbar/Navbar';\nimport axios from 'axios'\nimport './App.css';\nimport React, {useState,useEffect} from 'react'\nimport gsap from 'gsap'\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\nimport { ScrollToPlugin } from \"gsap/dist/ScrollToPlugin\";\ngsap.registerPlugin(ScrollTrigger, ScrollToPlugin);\nfunction App() {\n\n  let [menuState, setMenuState] = useState(false);\n  const [test, setTest] = useState(null)\n  const size = useWindowSize();\n  const getData =() =>{\n    axios.get('/testAPI')\n    .then((response) => {\n      console.log(response);\n      const newData = response.data;\n      setTest(newData);\n    })\n  }\n\n  useEffect(() => getData(), []);\n  \n  \n  return (\n    <div className=\"App\">\n      <Navbar  menuState={menuState} setMenuState={setMenuState} />\n      <Hero size={size} id=\"section-0\">{test}</Hero>\n      <Work id=\"section-1\"></Work>\n      <About id=\"section-2\"></About>\n      <Contact id=\"section-3\"></Contact>\n    </div>\n  );\n}\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}