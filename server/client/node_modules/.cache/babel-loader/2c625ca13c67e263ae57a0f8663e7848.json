{"ast":null,"code":"var _jsxFileName = \"E:\\\\Personal_Portfolio\\\\server\\\\client\\\\src\\\\components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { gsap } from \"gsap\";\nimport { Divide as Hamburger } from 'hamburger-react';\nimport { Link } from 'wouter';\nimport './Navbar.css';\nimport Drawer from './Drawer';\nimport Navlink from './Navlink';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst useViewport = () => {\n  _s();\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n  React.useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleWindowResize);\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []); // Return the width so we can use it in our components\n\n  return {\n    width\n  };\n};\n\n_s(useViewport, \"G7kj69GIMHEKUWgFcp/hGy+ukY8=\");\n\nfunction DrawerNav(props) {\n  const {\n    menuState,\n    setMenuState\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navlink, {\n      menuState: menuState,\n      setMenuState: setMenuState,\n      to: \"/\",\n      target: \"#section-0\",\n      type: \"logo\",\n      children: \"COLLIER DEV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"burger\",\n      children: /*#__PURE__*/_jsxDEV(Hamburger, {\n        className: `menu-trigger`,\n        toggled: menuState,\n        toggle: setMenuState,\n        size: \"30\",\n        color: \"#F3742A\",\n        position: \"absolute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c = DrawerNav;\n;\n\nfunction DesktopNav(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navlink, {\n      to: \"/\",\n      target: \"#section-0\",\n      type: \"logo\",\n      children: \"COLLIER DEV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: 'nav-menu',\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(Navlink, {\n          target: \"#section-1\",\n          to: \"/\",\n          type: \"nav-links\",\n          children: \"Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(Navlink, {\n          to: \"/\",\n          target: \"#section-2\",\n          type: \"nav-links\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(Navlink, {\n          target: \"#section-3\",\n          to: \"/\",\n          type: \"nav-links\",\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/experiments\",\n          className: \"nav-links\",\n          type: \"nav-links\",\n          children: \"Experiments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = DesktopNav;\n;\n\nfunction Navigation(props) {\n  _s2();\n\n  const {\n    width\n  } = useViewport();\n  const breakpoint = 960;\n  const navRef = useRef();\n  useEffect(() => {\n    const animation = gsap.to(navRef.current, {\n      y: -120,\n      paused: true,\n      duration: 0.2\n    });\n    const animation2 = gsap.to(navRef.current, {\n      scrollTrigger: {\n        start: \"top top\",\n        end: 99999,\n        onUpdate: self => {\n          self.direction === 1 ? animation.play() : animation.reverse();\n        }\n      }\n    });\n    return () => {\n      animation.kill();\n      animation2.scrollTrigger.kill();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-container\",\n        ref: navRef,\n        children: width < breakpoint ? /*#__PURE__*/_jsxDEV(DrawerNav, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(DesktopNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 68\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), width < breakpoint ? /*#__PURE__*/_jsxDEV(Drawer, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 27\n    }, this) : '']\n  }, void 0, true);\n}\n\n_s2(Navigation, \"EcA94t7MSCw4q5Zqm2KWdey6gSk=\", false, function () {\n  return [useViewport];\n});\n\n_c3 = Navigation;\n;\n\nfunction Navbar(props) {\n  return /*#__PURE__*/_jsxDEV(Navigation, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n}\n\n_c4 = Navbar;\nexport default Navbar;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"DrawerNav\");\n$RefreshReg$(_c2, \"DesktopNav\");\n$RefreshReg$(_c3, \"Navigation\");\n$RefreshReg$(_c4, \"Navbar\");","map":{"version":3,"sources":["E:/Personal_Portfolio/server/client/src/components/Navbar/Navbar.js"],"names":["React","useRef","useEffect","gsap","Divide","Hamburger","Link","Drawer","Navlink","useViewport","width","setWidth","useState","window","innerWidth","handleWindowResize","addEventListener","removeEventListener","DrawerNav","props","menuState","setMenuState","DesktopNav","Navigation","breakpoint","navRef","animation","to","current","y","paused","duration","animation2","scrollTrigger","start","end","onUpdate","self","direction","play","reverse","kill","Navbar"],"mappings":"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","sourcesContent":["  \r\nimport React, {useRef, useEffect} from 'react';\r\nimport { gsap } from \"gsap\";\r\nimport { Divide as Hamburger } from 'hamburger-react'\r\nimport {Link} from 'wouter'\r\nimport './Navbar.css';\r\nimport Drawer from './Drawer';\r\nimport Navlink from './Navlink'\r\nconst useViewport = () => {\r\n  const [width, setWidth] = React.useState(window.innerWidth);\r\n  React.useEffect(() => {\r\n    const handleWindowResize = () => setWidth(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n  }, []);\r\n\r\n  // Return the width so we can use it in our components\r\n  return { width };\r\n}\r\n\r\n\r\nfunction DrawerNav(props){\r\n  const { menuState, setMenuState } = props;\r\n  return(\r\n    <>\r\n        <Navlink menuState={menuState} setMenuState={setMenuState}  to='/'  target=\"#section-0\" type=\"logo\">\r\n          COLLIER DEV\r\n        </Navlink>\r\n        <div className='burger'>\r\n        <Hamburger className={`menu-trigger`} toggled={menuState} toggle={setMenuState} size=\"30\" color=\"#F3742A\" position=\"absolute\"/>\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction DesktopNav(props) {\r\nreturn(\r\n  <>\r\n    <Navlink  to='/'  target=\"#section-0\" type=\"logo\">\r\n      COLLIER DEV\r\n    </Navlink>\r\n    <ul className={'nav-menu'}>\r\n      <li className='nav-item'>\r\n      <Navlink target=\"#section-1\" to='/' type=\"nav-links\">\r\n          Work\r\n        </Navlink>\r\n      </li>\r\n      <li className='nav-item'>\r\n      <Navlink to='/' target=\"#section-2\" type=\"nav-links\">\r\n          About\r\n        </Navlink>\r\n\r\n      </li>\r\n      <li className='nav-item'>\r\n\r\n      <Navlink target=\"#section-3\" to='/' type=\"nav-links\">\r\n          Contact\r\n        </Navlink>\r\n      </li>\r\n\r\n      <li className='nav-item'>\r\n      <Link to='/experiments' className='nav-links' type=\"nav-links\">\r\n          Experiments\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </>\r\n);\r\n};\r\n\r\nfunction Navigation(props) {\r\n  const { width } = useViewport();\r\n  const breakpoint = 960;\r\n  const navRef= useRef();\r\n  useEffect(() => {\r\n    const animation = gsap.to(navRef.current, {\r\n          \r\n      y:-120,\r\n      paused: true,\r\n      duration: 0.2,\r\n      \r\n    });\r\n    const animation2 = gsap.to(navRef.current, {\r\n      scrollTrigger: {\r\n        start: \"top top\",\r\n        end: 99999,\r\n        onUpdate: (self) => {\r\n          self.direction === 1 ? animation.play() : animation.reverse();\r\n        },\r\n      },\r\n    });\r\n    return () => {\r\n      animation.kill();\r\n      animation2.scrollTrigger.kill();\r\n    };\r\n  },[])\r\n  return(\r\n    <>\r\n    <nav className='navbar'>  \r\n      <div className='navbar-container' ref={navRef}>\r\n        {width < breakpoint ? <DrawerNav {...props}></DrawerNav> : <DesktopNav/>}\r\n      </div>\r\n    </nav>\r\n    {width < breakpoint ? <Drawer {...props}/> : ''}\r\n    </>\r\n  ) ;\r\n};\r\n\r\nfunction Navbar(props) {\r\n\r\n  return (\r\n      <Navigation {...props}/>\r\n  );\r\n}\r\n\r\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}